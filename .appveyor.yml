
environment:
  matrix:

   - job_name: Windows
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
     configuration: Debug
     platform: x64

   - job_name: Windows
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
     configuration: Release
     platform: x64

   - job_name: Windows
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
     configuration: Retail
     platform: x64

   - job_name: Linux
     APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
     buildcfg: debug64

   - job_name: Linux
     APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
     buildcfg: release64

   - job_name: Linux
     APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
     buildcfg: retail64

   - job_name: OSX
     APPVEYOR_BUILD_WORKER_IMAGE: macOS-monterey
     buildcfg: debug64

   - job_name: OSX
     APPVEYOR_BUILD_WORKER_IMAGE: macOS-monterey
     buildcfg: release64

   - job_name: OSX
     APPVEYOR_BUILD_WORKER_IMAGE: macOS-monterey
     buildcfg: retail64

shallow_clone: true

install:
- git submodule init
- git submodule update

for:
  
# ======================================
# Windows
# ======================================

  -
    matrix:
      only:
      - job_name: Windows
      - QTDIR: C:\Qt\6.5.3\msvc2019_64
    
    init:
    - set QTDIR_VS2019_x64=C:\Qt\6.5.3\msvc2019_64
    - set QTDIR_VS2019_x86=C:\Qt\6.5.3\msvc2019_64
    - set PATH=C:\projects\mtuner\luaforwindows\files;C:\Qt\6.5.3\msvc2019_64\bin;%PATH%
    - git clone --recursive --depth 1 https://github.com/milostosic/MTuner  MTuner
    - git clone --depth 1 https://github.com/rjpcomputing/luaforwindows     luaforwindows
    - dir C:\projects\mtuner\luaforwindows\files\lua5.1.exe
    - dir C:\Qt\6.5.3\msvc2019_64\bin\uic.exe

    install:
      - MTuner\build\tools\bin\windows\genie.exe --file=MTuner\src\MTuner\genie\genie.lua vs2019

    build: MTuner/.build/windows/vs2019/MTuner/projects/MTuner.sln

# ======================================
# Linux
# ======================================

  -
    matrix:
      only:
      - job_name: Linux

    init:
    - sudo apt-get update
    - sudo apt-get install -y lua5.3 build-essential libgl1-mesa-dev
    - export QTDIR="$HOME/Qt/6.5.3/gcc_64"
    - export PATH="$HOME/Qt/6.5.3/gcc_64/bin:$HOME/Qt/6.5.3/gcc_64/libexec:/home/appveyor/Qt/6.5.3/gcc_64/libexec:$PATH"
    - export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$HOME/Qt/6.5.3/gcc_64/lib/pkgconfig"
    - export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/home/appveyor/Qt/6.5.3/gcc_64/lib/pkgconfig
    - export QTDIR_GMAKE_x64="$HOME/Qt/6.5.3/gcc_64"
    - export QTDIR_GMAKE_x86="$HOME/Qt/6.5.3/gcc_64" 
    - git clone --recursive --depth 1 https://github.com/milostosic/MTuner    MTuner
    - git clone --depth 1 https://github.com/bkaradzic/GENie                  GENie		# build GENie from source: `GLIBC_2.29' not found
    - cd GENie && make && cd ..

    install:
      - ./GENie/bin/linux/genie --file=MTuner/src/MTuner/genie/genie.lua --gcc=linux-gcc gmake
  
    build_script:
      - cd MTuner/.build/linux/gcc/MTuner/projects/
      - make config=${buildcfg}
     
# ======================================
# OSX
# ======================================

  -
    matrix:
      only:
      - job_name: OSX

    init:
    - if [ ! -d ../vcpkg ]; then git clone https://github.com/microsoft/vcpkg.git ../vcpkg ; fi
    - "(cd ../vcpkg && git pull && ./bootstrap-vcpkg.sh)"
    - export VCPKG_DIR=`dirname $(pwd)/../vcpkg/vcpkg`
    - export QTDIR="/usr/local/Cellar/qt/6.5.1_3/" 
    - export PATH="/usr/local/Cellar/qt/6.5.1_3/bin:/usr/local/Cellar/qt/6.5.1_3/share/qt/libexec:$PATH"
    - export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/Cellar/qt/6.5.1_3/lib/pkgconfig"
    - export QTDIR_GMAKE_x64="/usr/local/Cellar/qt/6.5.1_3/"
    - export QTDIR_GMAKE_x86="/usr/local/Cellar/qt/6.5.1_3/" 
    - brew update
    - brew install lua qt6
    - git clone --recursive --depth 1 https://github.com/milostosic/MTuner       MTuner
    
    install:
      - ./MTuner/build/tools/bin/darwin/genie --file=MTuner/src/MTuner/genie/genie.lua --gcc=osx gmake
    
    build_script:
      - cd MTuner/.build/osx/clang/MTuner/projects/
      - make config=${buildcfg}
